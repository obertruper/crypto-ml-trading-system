#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ Vast.ai

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
SERVER_HOST="84.68.60.115"
SERVER_PORT="42244"
PROXY_HOST="ssh1.vast.ai"
PROXY_PORT="18645"
SERVER_USER="root"

echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${BLUE}‚ïë        –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ Vast.ai —Å–µ—Ä–≤–µ—Ä–µ           ‚ïë${NC}"
echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...${NC}"
if ssh -o ConnectTimeout=5 -p $SERVER_PORT $SERVER_USER@$SERVER_HOST "echo 'OK'" >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ${NC}"
    SSH_CMD="ssh -t -p $SERVER_PORT $SERVER_USER@$SERVER_HOST"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ${NC}"
    SSH_CMD="ssh -t -p $PROXY_PORT $SERVER_USER@$PROXY_HOST"
fi

# –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
$SSH_CMD << 'ENDSSH'

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –û–°
if [ -f /etc/os-release ]; then
    . /etc/os-release
    echo "–û–°: $NAME $VERSION"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
echo -e "\n${YELLOW}üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python...${NC}"
if command -v python3 &> /dev/null; then
    echo -e "${GREEN}‚úÖ Python3 –Ω–∞–π–¥–µ–Ω:${NC} $(python3 --version)"
    PYTHON_CMD="python3"
elif command -v python &> /dev/null; then
    echo -e "${GREEN}‚úÖ Python –Ω–∞–π–¥–µ–Ω:${NC} $(python --version)"
    PYTHON_CMD="python"
else
    echo -e "${RED}‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python...${NC}"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    if command -v apt-get &> /dev/null; then
        apt-get update
        apt-get install -y python3 python3-pip python3-venv
    elif command -v yum &> /dev/null; then
        yum install -y python3 python3-pip
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä${NC}"
        exit 1
    fi
    
    PYTHON_CMD="python3"
fi

# –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ "$PYTHON_CMD" = "python3" ] && ! command -v python &> /dev/null; then
    ln -sf $(which python3) /usr/bin/python
    echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ python -> python3${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º pip
echo -e "\n${YELLOW}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ pip...${NC}"
if ! command -v pip &> /dev/null && ! command -v pip3 &> /dev/null; then
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ pip...${NC}"
    $PYTHON_CMD -m ensurepip --upgrade || curl https://bootstrap.pypa.io/get-pip.py | $PYTHON_CMD
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º GPU
echo -e "\n${YELLOW}üñ•Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU...${NC}"
if command -v nvidia-smi &> /dev/null; then
    nvidia-smi --query-gpu=name,memory.total --format=csv,noheader
else
    echo -e "${RED}‚ùå nvidia-smi –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º CUDA
echo -e "\n${YELLOW}üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ CUDA...${NC}"
if [ -d /usr/local/cuda ]; then
    echo -e "${GREEN}‚úÖ CUDA –Ω–∞–π–¥–µ–Ω–∞:${NC}"
    ls -la /usr/local/ | grep cuda
    if [ -f /usr/local/cuda/version.txt ]; then
        cat /usr/local/cuda/version.txt
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  CUDA –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –º–µ—Å—Ç–µ${NC}"
fi

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo -e "\n${YELLOW}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
cd /workspace

if [ ! -d "venv" ]; then
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    $PYTHON_CMD -m venv venv
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source venv/bin/activate

# –û–±–Ω–æ–≤–ª—è–µ–º pip
pip install --upgrade pip

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è transformer_v3
if [ -f "transformer_v3/requirements.txt" ]; then
    echo -e "\n${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π transformer_v3...${NC}"
    pip install -r transformer_v3/requirements.txt
else
    echo -e "\n${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    pip install \
        tensorflow \
        pandas \
        numpy \
        scikit-learn \
        matplotlib \
        seaborn \
        psycopg2-binary \
        pyyaml \
        tqdm
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º TensorFlow GPU
echo -e "\n${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ TensorFlow GPU...${NC}"
python -c "
import tensorflow as tf
print(f'TensorFlow –≤–µ—Ä—Å–∏—è: {tf.__version__}')
gpus = tf.config.list_physical_devices('GPU')
if gpus:
    print(f'‚úÖ –ù–∞–π–¥–µ–Ω–æ GPU: {len(gpus)}')
    for gpu in gpus:
        print(f'   {gpu}')
else:
    print('‚ùå GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω TensorFlow')
"

echo -e "\n${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo -e "${YELLOW}–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
echo "cd /workspace && source venv/bin/activate"

ENDSSH

echo -e "\n${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"