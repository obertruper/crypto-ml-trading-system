#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import yaml
from prepare_dataset import PostgreSQLManager, MarketDatasetPreparator
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
with open('config.yaml', 'r') as f:
    config = yaml.safe_load(f)

db_config = config['database']
risk_profile = config['risk_profile']

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
db_manager = PostgreSQLManager(db_config)
db_manager.connect()

# –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ—Ä
preparator = MarketDatasetPreparator(db_manager, risk_profile)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏–º–≤–æ–ª—ã —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º
symbols_to_process = ['1000PEPEUSDT', '1INCHUSDT']
limit_per_symbol = 20000  # 20k –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å–∏–º–≤–æ–ª –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞

logger.info(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±—ã—Å—Ç—Ä—É—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –¥–∞—Ç–∞—Å–µ—Ç–∞...")
logger.info(f"   –°–∏–º–≤–æ–ª—ã: {', '.join(symbols_to_process)}")
logger.info(f"   –õ–∏–º–∏—Ç –Ω–∞ —Å–∏–º–≤–æ–ª: {limit_per_symbol:,}")

results = {}
for symbol in symbols_to_process:
    logger.info(f"\nüìä –û–±—Ä–∞–±–æ—Ç–∫–∞ {symbol}...")
    result = preparator.process_single_symbol(symbol, limit=limit_per_symbol)
    results[symbol] = result
    
    if result['success']:
        logger.info(f"‚úÖ {symbol}: –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {result['total_records']} –∑–∞–ø–∏—Å–µ–π")
    else:
        logger.error(f"‚ùå {symbol}: {result['error']}")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
if any(r['success'] for r in results.values()):
    preparator.save_feature_columns_metadata()

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
stats = preparator.get_processing_statistics()
logger.info(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
for symbol, stat in stats.items():
    if stat['total_records'] > 0:
        logger.info(f"\n{symbol}:")
        logger.info(f"   –ó–∞–ø–∏—Å–µ–π: {stat['total_records']:,}")
        logger.info(f"   BUY win rate: {stat['buy_win_rate']:.1f}%")
        logger.info(f"   SELL win rate: {stat['sell_win_rate']:.1f}%")

db_manager.disconnect()
logger.info(f"\n‚úÖ –ë—ã—Å—Ç—Ä–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")