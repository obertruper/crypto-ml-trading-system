#!/bin/bash
# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ ML Crypto Trading System

echo "üöÄ ML Crypto Trading System - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫"
echo "============================================"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç—É
PROJECT_DIR="/mnt/SSD/PYCHARMPRODJECT/LLM TRANSFORM"
cd "$PROJECT_DIR"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL..."
if pg_isready -h localhost -p 5555 > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5555"
else
    echo "‚ùå PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..."
    echo "ilpnqw1234" | sudo -S systemctl start postgresql
    sleep 2
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -d "venv" ]; then
    source venv/bin/activate
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
else
    echo "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é:"
    echo "   python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if python -c "import pandas, numpy, tensorflow" 2>/dev/null; then
    echo "‚úÖ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –£—Å—Ç–∞–Ω–æ–≤–∫–∞..."
    pip install -r requirements.txt
fi

# –ó–∞–ø—É—Å–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã)
if [ -f ".mcp/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js" ]; then
    echo "üåê –ó–∞–ø—É—Å–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..."
    ./start_mcp.sh &
    echo "‚úÖ MCP —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
fi

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π
echo ""
echo "üìã –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
echo "1) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
echo "2) –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å Bybit"
echo "3) –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞"
echo "4) –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ (—Ä–µ–≥—Ä–µ—Å—Å–∏—è)"
echo "5) –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ (–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è)"
echo "6) –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±—É—á–µ–Ω–∏—è"
echo "7) –ó–∞–ø—É—Å–∫ crypto_ai_trading –ø—Ä–æ–µ–∫—Ç–∞"
echo "8) –ü–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω (1-4)"
echo "0) –í—ã—Ö–æ–¥"

read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice

case $choice in
    1)
        echo "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        python init_database.py
        ;;
    2)
        echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å Bybit..."
        python download_data.py
        ;;
    3)
        echo "üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞..."
        python prepare_dataset.py
        ;;
    4)
        echo "üß† –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ (—Ä–µ–≥—Ä–µ—Å—Å–∏—è)..."
        python train_universal_transformer.py --task regression
        ;;
    5)
        echo "üß† –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ (–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è)..."
        python train_universal_transformer.py --task classification
        ;;
    6)
        echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±—É—á–µ–Ω–∏—è..."
        python monitor_training.py
        ;;
    7)
        echo "üöÄ –ó–∞–ø—É—Å–∫ crypto_ai_trading..."
        cd crypto_ai_trading
        if [ -d "venv" ]; then
            source venv/bin/activate
        fi
        python main.py --mode demo
        ;;
    8)
        echo "üîÑ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞..."
        python run_futures_pipeline.py
        ;;
    0)
        echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
        exit 0
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac