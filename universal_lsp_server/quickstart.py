#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ LSP —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
–ü—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ./quickstart.py start
"""

import os
import sys
import subprocess
import argparse
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
sys.path.insert(0, str(Path(__file__).parent))

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import pygls
        import jedi
        import yaml
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except ImportError:
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        subprocess.check_call([
            sys.executable, "-m", "pip", "install", "-r", "requirements.txt"
        ])
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True

def start_server(args):
    """–ó–∞–ø—É—Å–∫ LSP —Å–µ—Ä–≤–µ—Ä–∞"""
    print(f"üöÄ –ó–∞–ø—É—Å–∫ LSP —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {args.port}...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    from lsp_server.cli import start_command
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    start_command(
        host=args.host,
        port=args.port,
        project=args.project or os.getcwd(),
        debug=args.debug
    )

def main():
    parser = argparse.ArgumentParser(description="Universal LSP Server - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫")
    
    subparsers = parser.add_subparsers(dest="command", help="–ö–æ–º–∞–Ω–¥—ã")
    
    # –ö–æ–º–∞–Ω–¥–∞ start
    start_parser = subparsers.add_parser("start", help="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
    start_parser.add_argument("--port", type=int, default=3000, help="–ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞")
    start_parser.add_argument("--host", default="127.0.0.1", help="–•–æ—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞")
    start_parser.add_argument("--project", help="–ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è)")
    start_parser.add_argument("--debug", action="store_true", help="Debug —Ä–µ–∂–∏–º")
    
    # –ö–æ–º–∞–Ω–¥–∞ check
    check_parser = subparsers.add_parser("check", help="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    
    args = parser.parse_args()
    
    if not args.command:
        print("Universal LSP Server - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫")
        print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  ./quickstart.py start       - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
        print("  ./quickstart.py check       - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("\n–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏: ./quickstart.py --help")
        return
    
    if args.command == "check" or args.command == "start":
        if not check_dependencies():
            sys.exit(1)
    
    if args.command == "start":
        start_server(args)

if __name__ == "__main__":
    # –î–µ–ª–∞–µ–º —Ñ–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    if os.name != 'nt':  # Unix/Linux/macOS
        os.chmod(__file__, 0o755)
    
    main()