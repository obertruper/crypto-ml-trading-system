#!/usr/bin/env python3
"""
CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è Universal LSP Server
"""

import os
import sys
import asyncio
import click
from pathlib import Path

# –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
@click.group()
def cli():
    """Universal LSP Server - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ CLI"""
    pass

@cli.command()
@click.option('--host', default='127.0.0.1', help='–•–æ—Å—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞')
@click.option('--port', default=3000, help='–ü–æ—Ä—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞')
@click.option('--project', default='.', help='–ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É')
@click.option('--debug', is_flag=True, help='Debug —Ä–µ–∂–∏–º')
def start(host, port, project, debug):
    """–ó–∞–ø—É—Å–∫ LSP —Å–µ—Ä–≤–µ—Ä–∞"""
    start_command(host, port, project, debug)

def start_command(host, port, project, debug):
    """–§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    print(f"üöÄ Universal LSP Server v1.0.0")
    print(f"üìÅ –ü—Ä–æ–µ–∫—Ç: {os.path.abspath(project)}")
    print(f"üåê –°–µ—Ä–≤–µ—Ä: http://{host}:{port}")
    print(f"üêõ Debug: {'–í–∫–ª—é—á–µ–Ω' if debug else '–í—ã–∫–ª—é—á–µ–Ω'}")
    print("\n‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º
    try:
        while True:
            import time
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

@cli.command()
def init():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
    config_content = """# Universal LSP Server Configuration
server:
  host: "127.0.0.1"
  port: 3000

indexing:
  parallel: true
  max_workers: 4
  exclude_patterns:
    - "__pycache__"
    - ".git"
    - "*.pyc"
    - ".venv"
    - "venv"

ai_export:
  format: "markdown"
  include_docstrings: true
  max_context_size: 100000
"""
    
    with open("lsp_config.yaml", "w") as f:
        f.write(config_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: lsp_config.yaml")

@cli.command()
def check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    py_version = sys.version_info
    print(f"‚úÖ Python {py_version.major}.{py_version.minor}.{py_version.micro}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    deps = ["pygls", "jedi", "yaml", "click"]
    missing = []
    
    for dep in deps:
        try:
            __import__(dep)
            print(f"‚úÖ {dep} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"‚ùå {dep} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            missing.append(dep)
    
    if missing:
        print(f"\n‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install {' '.join(missing)}")
    else:
        print("\n‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")

if __name__ == "__main__":
    cli()