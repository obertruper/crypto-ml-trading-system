#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è

echo "üöÄ –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ"
echo "==============================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
if ! pg_isready -p 5555 -h localhost > /dev/null 2>&1; then
    echo "‚ùå PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5555!"
    echo ""
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ë–î –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:"
    echo "1) pg_ctl start -D /usr/local/var/postgres"
    echo "2) brew services start postgresql"
    echo ""
    exit 1
fi
echo "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo ""
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
python_version=$(python3 --version 2>&1)
echo "   $python_version"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º TensorFlow
echo ""
echo "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ TensorFlow..."
python3 -c "import tensorflow as tf; print(f'   TensorFlow {tf.__version__}')" 2>/dev/null || {
    echo "‚ùå TensorFlow –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install tensorflow"
    exit 1
}

# –ú–µ–Ω—é
echo ""
echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
echo "1) –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ"
echo "2) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –ë–î"
echo "3) –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è"
echo "4) –û—Ç–∫—Ä—ã—Ç—å TensorBoard"
echo ""
read -p "–í–∞—à –≤—ã–±–æ—Ä (1-4): " choice

case $choice in
    1)
        echo ""
        echo "üß† –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è..."
        echo "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—ä–µ–º–∞ –¥–∞–Ω–Ω—ã—Ö"
        echo ""
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ
        python3 train_universal_transformer.py --config config.yaml
        
        echo ""
        echo "‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
        echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:"
        echo "   - –ú–æ–¥–µ–ª–∏: trained_model/"
        echo "   - –õ–æ–≥–∏: logs/training_*/"
        echo "   - –ì—Ä–∞—Ñ–∏–∫–∏: logs/training_*/plots/"
        ;;
    
    2)
        echo ""
        echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î..."
        python3 check_dataset_status.py
        ;;
    
    3)
        echo ""
        echo "üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è..."
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –ª–æ–≥–∞–º–∏
        latest_log=$(ls -td logs/training_* 2>/dev/null | head -1)
        
        if [ -z "$latest_log" ]; then
            echo "‚ùå –õ–æ–≥–∏ –æ–±—É—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            exit 1
        fi
        
        echo "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∏–∑: $latest_log"
        echo ""
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
        if [ -f "$latest_log/training.log" ]; then
            tail -f "$latest_log/training.log"
        else
            echo "‚ùå –§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        ;;
    
    4)
        echo ""
        echo "üìä –ó–∞–ø—É—Å–∫ TensorBoard..."
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –ª–æ–≥–∞–º–∏
        latest_log=$(ls -td logs/training_* 2>/dev/null | head -1)
        
        if [ -z "$latest_log" ]; then
            echo "‚ùå –õ–æ–≥–∏ –æ–±—É—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            exit 1
        fi
        
        echo "–û—Ç–∫—Ä—ã–≤–∞—é TensorBoard –¥–ª—è: $latest_log"
        echo "–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:6006"
        echo ""
        echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
        
        tensorboard --logdir "$latest_log/tensorboard" --host localhost --port 6006
        ;;
    
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!"
        exit 1
        ;;
esac