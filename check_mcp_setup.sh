#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP –¥–ª—è Claude Desktop
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP –¥–ª—è Claude Desktop"
echo "============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
echo -e "\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js:"
if command -v node &> /dev/null; then
    echo "‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
else
    echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑: brew install node"
    exit 1
fi

if command -v npm &> /dev/null; then
    echo "‚úÖ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(npm --version)"
else
    echo "‚ùå npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
CONFIG_FILE="$HOME/Library/Application Support/Claude/claude_desktop_config.json"
echo -e "\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:"
if [ -f "$CONFIG_FILE" ]; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ JSON
    if python3 -m json.tool "$CONFIG_FILE" > /dev/null 2>&1; then
        echo "‚úÖ JSON —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –≤ JSON —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ!"
        python3 -m json.tool "$CONFIG_FILE"
    fi
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ MCP —Å–µ—Ä–≤–µ—Ä—ã
    echo -e "\nüîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ MCP —Å–µ—Ä–≤–µ—Ä—ã:"
    python3 -c "
import json
with open('$CONFIG_FILE', 'r') as f:
    config = json.load(f)
    if 'mcpServers' in config:
        for server in config['mcpServers']:
            print(f'  - {server}')
    else:
        print('  ‚ùå –°–µ–∫—Ü–∏—è mcpServers –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
"
else
    echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "   –ü—É—Ç—å: $CONFIG_FILE"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
LOG_DIR="$HOME/Library/Logs/Claude"
echo -e "\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤:"
if [ -d "$LOG_DIR" ]; then
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    echo "   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ MCP:"
    ls -la "$LOG_DIR"/mcp*.log 2>/dev/null | tail -5 || echo "   –õ–æ–≥–∏ MCP –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
else
    echo "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Claude
echo -e "\nüèÉ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Claude:"
if pgrep -x "Claude" > /dev/null; then
    echo "‚úÖ Claude Desktop –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ö†Ô∏è  Claude Desktop –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
echo -e "\nüß™ –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∞–∑–æ–≤—ã—Ö MCP —Å–µ—Ä–≤–µ—Ä–æ–≤:"
echo "   (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...)"

# –¢–µ—Å—Ç fetch —Å–µ—Ä–≤–µ—Ä–∞
echo -n "   - @modelcontextprotocol/server-fetch: "
if npx -y @modelcontextprotocol/server-fetch --help > /dev/null 2>&1; then
    echo "‚úÖ"
else
    echo "‚ùå"
fi

# –¢–µ—Å—Ç filesystem —Å–µ—Ä–≤–µ—Ä–∞
echo -n "   - @modelcontextprotocol/server-filesystem: "
if npx -y @modelcontextprotocol/server-filesystem --help > /dev/null 2>&1; then
    echo "‚úÖ"
else
    echo "‚ùå"
fi

echo -e "\n‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo -e "\nüí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:"
echo "   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Claude Desktop –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo "   - –õ–æ–≥–∏ MCP –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å: tail -f ~/Library/Logs/Claude/mcp*.log"
echo "   - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://modelcontextprotocol.io/"