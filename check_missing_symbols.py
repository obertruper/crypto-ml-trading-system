#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
"""

from pybit.unified_trading import HTTP
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def check_missing_symbols():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã"""
    session = HTTP(testnet=False)
    
    # –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã
    missing_symbols = ['TAOUSDT', 'TRBUSDT', 'TRUMPUSDT', 'ZEREBROUSDT']
    
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ Bybit\n")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ—å—é—á–µ—Ä—Å–æ–≤
    response = session.get_instruments_info(category="linear", limit=1000)
    
    if response['retCode'] == 0:
        futures_symbols = {inst['symbol'] for inst in response['result']['list'] 
                         if inst['status'] == 'Trading'}
        
        logger.info(f"üìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ—å—é—á–µ—Ä—Å–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: {len(futures_symbols)}\n")
        
        for symbol in missing_symbols:
            if symbol in futures_symbols:
                logger.info(f"‚úÖ {symbol} - –î–û–°–¢–£–ü–ï–ù –Ω–∞ —Ñ—å—é—á–µ—Ä—Å–∞—Ö!")
                
                # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏
                try:
                    ticker = session.get_tickers(category="linear", symbol=symbol)
                    if ticker['retCode'] == 0 and ticker['result']['list']:
                        data = ticker['result']['list'][0]
                        logger.info(f"   –¶–µ–Ω–∞: ${data.get('lastPrice')}")
                        logger.info(f"   –û–±—ä–µ–º 24—á: ${float(data.get('volume24h', 0)):,.0f}\n")
                except:
                    pass
            else:
                logger.info(f"‚ùå {symbol} - –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ —Ñ—å—é—á–µ—Ä—Å–∞—Ö")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
                base = symbol.replace('USDT', '')
                alternatives = [s for s in futures_symbols if base in s and 'USDT' in s]
                if alternatives:
                    logger.info(f"   üí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã: {', '.join(alternatives)}\n")
                else:
                    logger.info("")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–æ—Ç –¥–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö
        logger.info("\nüìà –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–æ—Ç–µ:")
        spot_response = session.get_instruments_info(category="spot", limit=1000)
        
        if spot_response['retCode'] == 0:
            spot_symbols = {inst['symbol'] for inst in spot_response['result']['list']}
            
            for symbol in missing_symbols:
                if symbol not in futures_symbols and symbol in spot_symbols:
                    logger.info(f"  {symbol} - –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –°–ü–û–¢–ï")

if __name__ == "__main__":
    check_missing_symbols()