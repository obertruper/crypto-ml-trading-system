#!/bin/bash
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP (Model Context Protocol) –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ª–æ–∫–∞–ª—å–Ω–æ

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è ML Crypto Trading –ø—Ä–æ–µ–∫—Ç–∞..."
echo "=============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –≤–µ—Ä—Å–∏–∏ 16 –∏–ª–∏ –≤—ã—à–µ"
    echo "   –°–∫–∞—á–∞—Ç—å –º–æ–∂–Ω–æ —Å: https://nodejs.org/"
    exit 1
fi

echo "‚úÖ Node.js –Ω–∞–π–¥–µ–Ω: $(node --version)"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è MCP –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p .mcp
cd .mcp

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è npm –ø—Ä–æ–µ–∫—Ç–∞
echo "üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è npm –ø—Ä–æ–µ–∫—Ç–∞..."
npm init -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –ª–æ–∫–∞–ª—å–Ω–æ
echo ""
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..."

# 1. Filesystem —Å–µ—Ä–≤–µ—Ä - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo "1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ filesystem —Å–µ—Ä–≤–µ—Ä–∞..."
npm install @modelcontextprotocol/server-filesystem

# 2. PostgreSQL —Å–µ—Ä–≤–µ—Ä - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
echo "2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL —Å–µ—Ä–≤–µ—Ä–∞..."
npm install @modelcontextprotocol/server-postgres

# 3. GitHub —Å–µ—Ä–≤–µ—Ä - –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º
echo "3Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GitHub —Å–µ—Ä–≤–µ—Ä–∞..."
npm install @modelcontextprotocol/server-github

# 4. Memory —Å–µ—Ä–≤–µ—Ä - –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–π –ø–∞–º—è—Ç–∏
echo "4Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Memory —Å–µ—Ä–≤–µ—Ä–∞..."
npm install @modelcontextprotocol/server-memory

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd ..

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cat > .mcp/.env << EOF
# MCP Environment Variables
MCP_PROJECT_ROOT=/mnt/SSD/PYCHARMPRODJECT/LLM TRANSFORM
MCP_DB_CONNECTION=postgres://ruslan:your_secure_password_here@localhost:5555/crypto_trading
MCP_LOG_LEVEL=info

# GitHub Token (–¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω)
GITHUB_PERSONAL_ACCESS_TOKEN=

# API Keys (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã)
BYBIT_API_KEY=
BYBIT_API_SECRET=
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP
echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP..."
cat > .mcp/mcp_config.json << 'EOF'
{
  "mcpServers": {
    "filesystem": {
      "command": "node",
      "args": [
        ".mcp/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js",
        "/mnt/SSD/PYCHARMPRODJECT/LLM TRANSFORM"
      ]
    },
    "postgres": {
      "command": "node",
      "args": [
        ".mcp/node_modules/@modelcontextprotocol/server-postgres/dist/index.js"
      ],
      "env": {
        "DATABASE_URL": "postgres://ruslan:your_secure_password_here@localhost:5555/crypto_trading"
      }
    },
    "github": {
      "command": "node",
      "args": [
        ".mcp/node_modules/@modelcontextprotocol/server-github/dist/index.js"
      ],
      "env": {
        "GITHUB_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
      }
    },
    "memory": {
      "command": "node",
      "args": [
        ".mcp/node_modules/@modelcontextprotocol/server-memory/dist/index.js"
      ]
    }
  }
}
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞ MCP
echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞..."
cat > start_mcp.sh << 'EOF'
#!/bin/bash
# –ó–∞–ø—É—Å–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤

echo "üöÄ –ó–∞–ø—É—Å–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..."

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f .mcp/.env ]; then
    export $(cat .mcp/.env | grep -v '^#' | xargs)
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
if [ ! -d ".mcp/node_modules" ]; then
    echo "‚ùå MCP —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./setup_mcp_local.sh"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ filesystem —Å–µ—Ä–≤–µ—Ä–∞
echo "Starting filesystem server..."
node .mcp/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js "$MCP_PROJECT_ROOT" &
PID1=$!

# –ó–∞–ø—É—Å–∫ PostgreSQL —Å–µ—Ä–≤–µ—Ä–∞
echo "Starting PostgreSQL server..."
DATABASE_URL="$MCP_DB_CONNECTION" node .mcp/node_modules/@modelcontextprotocol/server-postgres/dist/index.js &
PID2=$!

echo "‚úÖ MCP —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
echo "   Filesystem server PID: $PID1"
echo "   PostgreSQL server PID: $PID2"
echo ""
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: kill $PID1 $PID2"

# –°–æ—Ö—Ä–∞–Ω—è–µ–º PID'—ã
echo $PID1 > .mcp/filesystem.pid
echo $PID2 > .mcp/postgres.pid

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
wait
EOF

chmod +x start_mcp.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
cat > stop_mcp.sh << 'EOF'
#!/bin/bash
# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..."

if [ -f .mcp/filesystem.pid ]; then
    kill $(cat .mcp/filesystem.pid) 2>/dev/null
    rm .mcp/filesystem.pid
fi

if [ -f .mcp/postgres.pid ]; then
    kill $(cat .mcp/postgres.pid) 2>/dev/null
    rm .mcp/postgres.pid
fi

echo "‚úÖ MCP —Å–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
EOF

chmod +x stop_mcp.sh

echo ""
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –î–æ–±–∞–≤—å—Ç–µ GitHub —Ç–æ–∫–µ–Ω –≤ .mcp/.env (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ MCP —Å–µ—Ä–≤–µ—Ä—ã: ./start_mcp.sh"
echo "3. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤: ./stop_mcp.sh"
echo ""
echo "üí° MCP —Å–µ—Ä–≤–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ –≤ .mcp/node_modules"