#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ –¥–ª—è 1000PEPEUSDT
"""

import yaml
from prepare_dataset import MarketDatasetPreparator
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def main():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open('config.yaml', 'r') as f:
        config = yaml.safe_load(f)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Å —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª–µ–º
    db_config = config['database']
    risk_profile = config['risk_profile']
    processor = MarketDatasetPreparator(db_config, risk_profile)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ PEPE
    logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É 1000PEPEUSDT...")
    
    stats = processor.process_single_symbol('1000PEPEUSDT')
    
    if stats['success']:
        logger.info(f"\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        logger.info(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {stats['total_records']:,}")
        logger.info(f"   –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤: {stats['indicators_count']}")
        logger.info(f"   üü¢ BUY Win Rate: {stats['buy_win_rate']:.2f}%")
        logger.info(f"   üî¥ SELL Win Rate: {stats['sell_win_rate']:.2f}%")
    else:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {stats.get('error')}")

if __name__ == "__main__":
    main()